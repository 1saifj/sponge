# 生成go struct命令：sponge config --server-dir=./serverDir

# app 设置
app:
  name: "serverNameExample"  # 服务名称
  env: "dev"                   # 运行环境，dev:开发环境，prod:生产环境，test:测试环境
  version: "v0.0.0"         # 版本
  host: "192.168.3.27"   # 主机名称或ip
  enablePprof: false       # 是否开启性能分析功能，true:开启，false:关闭
  enableMetrics: true     # 是否开启指标采集，true:开启，false:关闭
  enableLimit: false       # 是否开启限流，true:开启，false:关闭
  enableCircuitBreaker: false       # 是否开启熔断，true:开启，false:关闭
  enableTracing: false    # 是否开启链路跟踪，true:开启，false:关闭
  enableRegistryDiscovery: false    # 是否开启注册与发现，true:开启，false:关闭
  registryDiscoveryType: consul     # 注册与发现类型，consul、etcd


# http 设置
http:
  port: 8080            # 监听端口
  readTimeout: 3     # 读超时，单位(秒)
  writeTimeout: 60  # 写超时，单位(秒)，如果enablePprof为true，需要大于60s，pprof做profiling的默认值是60s


# grpc 设置
grpc:
  port: 8282              # rpc监听端口
  metricsPort: 8283   # 获取指标http端口
  pprofPort: 8284      # pprof的http端口
  readTimeout: 3      # 读超时，单位(秒)
  writeTimeout: 3     # 写超时，单位(秒)


# logger 设置
logger:
  level: "info"             # 输出日志级别 debug, info, warn, error，默认是debug
  format: "console"     # 输出格式，console或json，默认是console
  isSave: false           # false:输出到终端，true:输出到文件，默认是false


# mysql 设置
mysql:
  # dsn格式：<user>:<pass>@(127.0.0.1:3306)/<db>?[k=v& ......]
  dsn: "root:123456@(192.168.3.37:3306)/account?parseTime=true&loc=Local&charset=utf8,utf8mb4"
  enableLog: true                    # 是否开启打印所有日志
  slowThreshold: 0                  # 如果大于0，只打印时间大于阈值的日志，优先级比enableLog高，单位(毫秒)
  maxIdleConns: 3                  # 设置空闲连接池中连接的最大数量
  maxOpenConns: 50              # 设置打开数据库连接的最大数量
  connMaxLifetime: 30            # 设置了连接可复用的最大时间，单位(分钟)


# redis 设置
redis:
  # dsn格式 [user]:<pass>@]127.0.0.1:6379/[db]，默认用户为default
  dsn: "default:123456@192.168.3.37:6379/0"
  dialTimeout: 10        # 链接超时，单位(秒)
  readTimeout: 2        # 读超时，单位(秒)
  writeTimeout: 2       # 写超时，单位(秒)


# jaeger 配置
jaeger:
  agentHost: "192.168.3.37"
  agentPort: "6831"
  samplingRate: 1.0     # 采样率，0~1之间，0表示禁止采样，大于等于1表示采样所有链路


# consul 配置
consul:
  addr: "192.168.3.37:8500"


# etcd 配置
etcd:
  addrs: ["192.168.3.37:2379"]
