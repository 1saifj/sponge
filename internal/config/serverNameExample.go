// nolint
// code generated by sponge.

package config

import (
	"github.com/zhufuyi/sponge/pkg/conf"
)

var config *Config

func Init(configFile string, fs ...func()) error {
	config = &Config{}
	return conf.Parse(configFile, config, fs...)
}

func Show() string {
	return conf.Show(config)
}

func Get() *Config {
	if config == nil {
		panic("config is nil")
	}
	return config
}

func Set(conf *Config) {
	config = conf
}

type Config struct {
	App    App    `yaml:"app" json:"app"`
	Etcd   Etcd   `yaml:"etcd" json:"etcd"`
	Grpc   Grpc   `yaml:"grpc" json:"grpc"`
	HTTP   HTTP   `yaml:"http" json:"http"`
	Jaeger Jaeger `yaml:"jaeger" json:"jaeger"`
	Logger Logger `yaml:"logger" json:"logger"`
	Mysql  Mysql  `yaml:"mysql" json:"mysql"`
	Redis  Redis  `yaml:"redis" json:"redis"`
}

type Etcd struct {
	Addrs []string `yaml:"addrs" json:"addrs"`
}

type Jaeger struct {
	AgentHost    string  `yaml:"agentHost" json:"agentHost"`
	AgentPort    string  `yaml:"agentPort" json:"agentPort"`
	SamplingRate float64 `yaml:"samplingRate" json:"samplingRate"`
}

type Mysql struct {
	ConnMaxLifetime int    `yaml:"connMaxLifetime" json:"connMaxLifetime"`
	Dsn             string `yaml:"dsn" json:"dsn"`
	EnableLog       bool   `yaml:"enableLog" json:"enableLog"`
	MaxIdleConns    int    `yaml:"maxIdleConns" json:"maxIdleConns"`
	MaxOpenConns    int    `yaml:"maxOpenConns" json:"maxOpenConns"`
	SlowThreshold   int    `yaml:"slowThreshold" json:"slowThreshold"`
}

type Redis struct {
	DialTimeout  int    `yaml:"dialTimeout" json:"dialTimeout"`
	Dsn          string `yaml:"dsn" json:"dsn"`
	ReadTimeout  int    `yaml:"readTimeout" json:"readTimeout"`
	WriteTimeout int    `yaml:"writeTimeout" json:"writeTimeout"`
}

type App struct {
	EnableCircuitBreaker    bool   `yaml:"enableCircuitBreaker" json:"enableCircuitBreaker"`
	EnableLimit             bool   `yaml:"enableLimit" json:"enableLimit"`
	EnableMetrics           bool   `yaml:"enableMetrics" json:"enableMetrics"`
	EnableProfile           bool   `yaml:"enableProfile" json:"enableProfile"`
	EnableRegistryDiscovery bool   `yaml:"enableRegistryDiscovery" json:"enableRegistryDiscovery"`
	EnableTracing           bool   `yaml:"enableTracing" json:"enableTracing"`
	Env                     string `yaml:"env" json:"env"`
	Host                    string `yaml:"host" json:"host"`
	Name                    string `yaml:"name" json:"name"`
	Version                 string `yaml:"version" json:"version"`
}

type Logger struct {
	Format string `yaml:"format" json:"format"`
	IsSave bool   `yaml:"isSave" json:"isSave"`
	Level  string `yaml:"level" json:"level"`
}

type Grpc struct {
	MetricsPort  int `yaml:"metricsPort" json:"metricsPort"`
	Port         int `yaml:"port" json:"port"`
	ReadTimeout  int `yaml:"readTimeout" json:"readTimeout"`
	WriteTimeout int `yaml:"writeTimeout" json:"writeTimeout"`
}

type HTTP struct {
	Port         int `yaml:"port" json:"port"`
	ReadTimeout  int `yaml:"readTimeout" json:"readTimeout"`
	WriteTimeout int `yaml:"writeTimeout" json:"writeTimeout"`
}
